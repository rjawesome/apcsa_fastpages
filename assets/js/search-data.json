{
  
    
        "post0": {
            "title": "Primitives Jupyter Notebook",
            "content": "Class with primitives &amp; wrapper classes . This class representing a Human that uses primitive and wrapper-class types . public class Human { private double heightIn; //a height can be a decimal private String name; //name is a sequence of words private int age; //is a whole nummber private boolean hasPets; //can either be true or false public Human (String name) { this.name = name; } public double getHeight () { return this.heightIn; } public void setHeight (double height) { this.heightIn = height; } public String getName () { return this.name; } public int getAge () { return this.age; } public void setAge (int age) { this.age = age; } public boolean getHasPets () { return this.hasPets; } public void setHasPets (boolean hasPets) { this.hasPets = hasPets; } public String getDetails () { return this.getName() + &quot; is &quot; + this.getAge() + &quot; years old and is &quot; + this.getHeight() + &quot; in tall and &quot; + (this.getHasPets() ? &quot;does&quot; : &quot;doesn&#39;t&quot;) + &quot; have pets.&quot;; } public static void main(String[] args) { Scanner sc = new Scanner(System.in); String name; double height; int age; boolean hasPets; //input name w/ error handling try { System.out.println(&quot;What is the name of the human?&quot;); name = sc.next(); } catch (InputMismatchException e) { System.out.println(&quot;Inputted name is not a string&quot;); return; } //input height w/ error handling try { System.out.println(&quot;What is the height of the human (in inches)?&quot;); height = sc.nextDouble(); } catch (InputMismatchException e) { System.out.println(&quot;Inputted height is not a double&quot;); return; } //input age w/ error handling try { System.out.println(&quot;What is the age of the human?&quot;); age = sc.nextInt(); } catch (InputMismatchException e) { System.out.println(&quot;Inputted age is not an integer&quot;); return; } //input hasPets w/ error handling try { System.out.println(&quot;Does the human have pets (true/false)?&quot;); hasPets = sc.nextBoolean(); } catch (InputMismatchException e) { System.out.println(&quot;Inputted value is not a boolean (true/false)&quot;); return; } //create human Human rohan = new Human(name); rohan.setHeight(height); rohan.setAge(age); rohan.setHasPets(hasPets); System.out.println(rohan.getDetails()); } } . Now we can test the code using the Human::main method . Human.main(null); . What is the name of the human? What is the height of the human (in inches)? What is the age of the human? Does the human have pets (true/false)? Rohan is 16 years old and is 67.25 in tall and doesn&#39;t have pets. . Casting w/ Arithmetic Operations . Here Examples are shown how casting can affect the results of arithmetic operations . public class ArithmeticOps { public static void main (String[] args) { System.out.println(&quot;Integer Division Calculator&quot;); Scanner sc = new Scanner(System.in); int a, b; try { System.out.println(&quot;Enter value for a&quot;); a = sc.nextInt(); System.out.println(&quot;Enter value for b&quot;); b = sc.nextInt(); } catch (InputMismatchException e) { System.out.println(&quot;Input was not an integers&quot;); return; } int integerDivision = a/b; //this will round down due to integer division double doubleDivision = ((double)a)/((double)b); //a and b are converted to doubles before division giving exact results System.out.println(&quot;a is &quot; + a + &quot; and b is &quot; + b); System.out.println(&quot;Integer Division Result &quot; + integerDivision); System.out.println(&quot;Double Division Result &quot; + doubleDivision); //note that the result for this may be slightly inaccurate due to base-2 to base-10 conversion } } . ArithmeticOps.main(null); . Integer Division Calculator Enter value for a Enter value for b a is 7 and b is 4 Integer Division Result 1 Double Division Result 1.75 . Compound Assignment Operators . Here I demo the use of compound operators . public class CompoundOps { public static void main (String[] args) { Scanner sc = new Scanner(System.in); try { System.out.println(&quot;Enter first number: &quot;); double a = sc.nextDouble(); System.out.println(&quot;The number is now &quot; + a); System.out.println(&quot;Increase number by: &quot;); a += sc.nextDouble(); System.out.println(&quot;The number is now &quot; + a); System.out.println(&quot;Decrease number by: &quot;); a -= sc.nextDouble(); System.out.println(&quot;The number is now &quot; + a); System.out.println(&quot;Multiply number by: &quot;); a *= sc.nextDouble(); System.out.println(&quot;The number is now &quot; + a); System.out.println(&quot;Divide number by: &quot;); a /= sc.nextDouble(); System.out.println(&quot;The number is now &quot; + a); } catch (InputMismatchException e) { System.out.println(&quot;Input was invalid&quot;); } } } . CompoundOps.main(null); . Enter first number: The number is now 10.0 Increase number by: The number is now 30.0 Decrease number by: The number is now -10.0 Multiply number by: The number is now -60.0 Divide number by: The number is now -6.666666666666667 . GPA Calculator . This GPA Calculator takes in your grades as in input and outputs different types of GPA. . //stats for a Grade (A,B,C NOT 9th,10th,11th) public class GradeStats { private int total_count; // -- int because whole number private int total_count_ap; // int because whole number private int uc_count; //UC count only includes sophmore/junior years -- int because whole number private int uc_count_ap; //UC count only includes sophmore/junior years -- int because whole number private double ap_gpa; //gpa for AP Classes (ie. 4.0, 3.0, etc.) -- double because it can have decimals private double normal_gpa; //gpa for Normal Classes (ie. 5.0, 4.0, etc.) -- double because it can have decimals private String grade; //A, B, C, etc. -- string because it is characters public GradeStats (String grade, double ap_gpa, double normal_gpa) { this.grade = grade; this.ap_gpa = ap_gpa; this.normal_gpa = normal_gpa; } public void setTotalCount (int total_count) { this.total_count = total_count; } public int getTotalCount () { return this.total_count; } public void setTotalCountAP (int total_count_ap) { this.total_count_ap = total_count_ap; } public int getTotalCountAP () { return this.total_count_ap; } public void setUCCount (int uc_count) { this.uc_count = uc_count; } public int getUCCount () { return this.uc_count; } public void setUCCountAP (int uc_count_ap) { this.uc_count_ap = uc_count_ap; } public int getUCCountAP () { return this.uc_count_ap; } public String getGrade () { return this.grade; } public double getAPGPA () { return this.ap_gpa; } public double getNormalGPA () { return this.normal_gpa; } } . public class GPACalculator { GradeStats[] gradeStats = { new GradeStats(&quot;A&quot;, 5.0, 4.0), new GradeStats(&quot;B&quot;, 4.0, 3.0), new GradeStats(&quot;C&quot;, 3.0, 2.0), new GradeStats(&quot;D&quot;, 2.0, 1.0), new GradeStats(&quot;F&quot;, 1.0, 0.0) }; // gets input from the scanner public GPACalculator (Scanner sc) throws InputMismatchException { for (int i = 0; i&lt;5; i++) { GradeStats curGradeStats = gradeStats[i]; System.out.print(&quot;How many total &quot; + curGradeStats.getGrade() + &quot;s do you have? &quot;); curGradeStats.setTotalCount(sc.nextInt()); System.out.println(curGradeStats.getTotalCount()); System.out.print(&quot;How many total (AP) &quot; + curGradeStats.getGrade() + &quot;s do you have? &quot;); curGradeStats.setTotalCountAP(sc.nextInt()); System.out.println(curGradeStats.getTotalCountAP()); System.out.print(&quot;How many sophmore/junior &quot; + curGradeStats.getGrade() + &quot;s do you have? &quot;); curGradeStats.setUCCount(sc.nextInt()); System.out.println(curGradeStats.getUCCount()); System.out.print(&quot;How many sophmore/junior (AP) &quot; + curGradeStats.getGrade() + &quot;s do you have? &quot;); curGradeStats.setUCCountAP(sc.nextInt()); System.out.println(curGradeStats.getUCCountAP()); } } public double getUnweighted () { double total = 0; double count = 0; for (int i = 0; i&lt;5; i++) { GradeStats curGradeStats = gradeStats[i]; count += curGradeStats.getTotalCount(); total += curGradeStats.getTotalCount() * curGradeStats.getNormalGPA(); } return count != 0.0 ? total/count : 0.0; } public double getWeighted () { double total = 0; double count = 0; for (int i = 0; i&lt;5; i++) { GradeStats curGradeStats = gradeStats[i]; count += curGradeStats.getTotalCount(); int normalCount = curGradeStats.getTotalCount() - curGradeStats.getTotalCountAP(); total += normalCount * curGradeStats.getNormalGPA() + curGradeStats.getTotalCountAP() * curGradeStats.getAPGPA(); } return count != 0.0 ? total/count : 0.0; } public double getUnweightedUC () { double total = 0; double count = 0; for (int i = 0; i&lt;5; i++) { GradeStats curGradeStats = gradeStats[i]; count += curGradeStats.getUCCount(); total += curGradeStats.getUCCount() * curGradeStats.getNormalGPA(); } return count != 0.0 ? total/count : 0.0; } public double getWeightedUC () { double total = 0; double count = 0; int ap_count = 0; //limited to 8 AP trimesters for (int i = 0; i&lt;5; i++) { GradeStats curGradeStats = gradeStats[i]; count += curGradeStats.getUCCount(); if (ap_count &gt; 8) { total += curGradeStats.getUCCount() * curGradeStats.getNormalGPA(); continue; } ap_count += curGradeStats.getUCCountAP(); if (ap_count &gt; 8) { int normalAPs = curGradeStats.getUCCountAP() - ap_count; int normalCount = curGradeStats.getUCCount() - curGradeStats.getUCCountAP() + normalAPs; total += normalCount * curGradeStats.getNormalGPA() + (curGradeStats.getUCCountAP() - normalAPs) * curGradeStats.getAPGPA(); } else { int normalCount = curGradeStats.getUCCount() - curGradeStats.getUCCountAP(); total += normalCount * curGradeStats.getNormalGPA() + curGradeStats.getUCCountAP() * curGradeStats.getAPGPA(); } } return count != 0.0 ? total/count : 0.0; } //runs GPA Calculator class public static void main (String[] args) { try { Scanner sc = new Scanner(System.in); GPACalculator gpaCalc = new GPACalculator(sc); System.out.println(&quot;Unweighted GPA: &quot; + gpaCalc.getUnweighted()); System.out.println(&quot;Weighted GPA: &quot; + gpaCalc.getWeighted()); System.out.println(&quot;Unweighted GPA (UC): &quot; + gpaCalc.getUnweightedUC()); System.out.println(&quot;Weighted GPA (UC): &quot; + gpaCalc.getWeightedUC()); } catch (InputMismatchException e) { System.out.println(&quot;Bad Input (all input should be integers)!&quot;); } } } . GPACalculator.main(null); . How many total As do you have? 29 How many total (AP) As do you have? 8 How many sophmore/junior As do you have? 14 How many sophmore/junior (AP) As do you have? 6 How many total Bs do you have? 0 How many total (AP) Bs do you have? 0 How many sophmore/junior Bs do you have? 0 How many sophmore/junior (AP) Bs do you have? 0 How many total Cs do you have? 0 How many total (AP) Cs do you have? 0 How many sophmore/junior Cs do you have? 0 How many sophmore/junior (AP) Cs do you have? 0 How many total Ds do you have? 0 How many total (AP) Ds do you have? 0 How many sophmore/junior Ds do you have? 0 How many sophmore/junior (AP) Ds do you have? 0 How many total Fs do you have? 0 How many total (AP) Fs do you have? 0 How many sophmore/junior Fs do you have? 0 How many sophmore/junior (AP) Fs do you have? 0 Unweighted GPA: 4.0 Weighted GPA: 4.275862068965517 Unweighted GPA (UC): 4.0 Weighted GPA (UC): 4.428571428571429 .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/fastpages/jupyter/2022/08/22/primitives.html",
            "relUrl": "/fastpages/jupyter/2022/08/22/primitives.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python Jupyter Notebook",
            "content": "print(&#39;hello&#39;) . hello .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/fastpages/jupyter/2022/08/19/python.html",
            "relUrl": "/fastpages/jupyter/2022/08/19/python.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "A cool post",
            "content": "This is a very great post . Why is this post great? . This post has a java code sample 😲 . public class Test { public static void main (String[] args) { System.out.println(&quot;sheeeeeeesh&quot;); } } .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/markdown/2022/08/19/markdown-post.html",
            "relUrl": "/markdown/2022/08/19/markdown-post.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Java Jupyter Notebook",
            "content": "//imports import java.time.*; . //Class can print a value with current date public class Printer { private String value; //takes in value to print public Printer (String value) { this.value = value; } //prints the value &amp; date info from java.time public void print() { //get current date in YYYY-MM-DD format String currentDate = LocalDate.now().toString(); //print value &amp; currentdate System.out.println(&quot;[&quot; + currentDate + &quot;]: &quot; + value); } //tests the class by printing hello and hello world public static void main (String[] args) { //this printer prints hello Printer helloPrinter = new Printer(&quot;hello&quot;); helloPrinter.print(); //this printer prints hello world Printer helloWorldPrinter = new Printer(&quot;hello world&quot;); helloWorldPrinter.print(); } } . // use main method from Printer Printer.main(null); /* expected output (ran on 8/20/2022): * [2022-08-20]: hello * [2022-08-20]: hello world */ . [2022-08-20]: hello [2022-08-20]: hello world .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/fastpages/jupyter/2022/08/19/java.html",
            "relUrl": "/fastpages/jupyter/2022/08/19/java.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Bash Installer/Checker",
            "content": "Bash CSA Installer . This program checks for all installations necessary for CSA and installs them if necessary. Also checks for program versions if old versions cause issues (ie. java). . echo &quot;Welcome to CSA Installer. Note that installations may require sudo permissions &amp; password to be entered&quot; # make sure in home directory of user cd ~ # check anaconda installation if command -v anaconda &gt;/dev/null; then echo &quot;Anaconda installed&quot; else echo &quot;Installing Anaconda&quot; wget https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh ./Anaconda3-2022.05-Linux-x86_64.sh fi # check python 3 installation if python3 --version | grep &quot;Python 3&quot; &gt;/dev/null; then echo &quot;Python 3 installed&quot; else echo &quot;Installing Python 3&quot; sudo apt install python3 python3-pip fi # check python 2 installation if python2 --version 2&gt;&amp;1 | grep &quot;Python 2&quot; &gt;/dev/null; then echo &quot;Python 2 installed&quot; else echo &quot;Installing Python 2&quot; sudo apt install python2 fi #check java installation and java version java_version=`java --version | head -n 1 | awk -F &quot; &quot; &#39;{print $2}&#39; | awk -F &quot;.&quot; &#39;{print $1}&#39;` if [[ $java_version -ge 11 ]]; then echo &quot;Java installed with Version 11 or Better&quot; else echo &quot;Installing Java Version 11 (Version too low or Java not installed)&quot; sudo add-apt-repository ppa:openjdk-r/ppa sudo apt update sudo apt install openjdk-11-jdk fi #check jupyter installation if [[ -f ~/anaconda3/bin/jupyter ]]; then echo &quot;Jupyter installed&quot; else echo &quot;Installing jupyter&quot; ~/anaconda3/bin/conda install jupyter fi #check bash kernel installation if ~/anaconda3/bin/jupyter kernelspec list | grep bash &gt;/dev/null; then echo &quot;Bash Kernel Installed&quot; else echo &quot;Installing Bash Kernel&quot; pip3 install bash_kernel python3 -m bash_kernel.install fi #check java kernel installation if ~/anaconda3/bin/jupyter kernelspec list | grep java &gt;/dev/null; then echo &quot;Java Kernel Installed&quot; else echo &quot;Installing Java Kernel&quot; wget https://github.com/SpencerPark/IJava/releases/download/v1.3.0/ijava-1.3.0.zip unzip ijava-1.3.0.zip python3 install.py --user fi . Welcome to CSA Installer. Note that installations may require sudo permissions &amp; password to be entered Anaconda installed Python 3 installed Python 2 installed Java installed with Version 11 or Better Jupyter installed Bash Kernel Installed Java Kernel Installed .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/2022/02/26/bash.html",
            "relUrl": "/2022/02/26/bash.html",
            "date": " • Feb 26, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://rjawesome.github.io/apcsa_fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is created by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://rjawesome.github.io/apcsa_fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://rjawesome.github.io/apcsa_fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}